<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.55.0" timestamp="2025-09-15T13:11:35.238">
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Add.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="43" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="main.java.mathNode" class="Add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Add
</violation>
<violation beginline="10" endline="10" begincolumn="11" endcolumn="35" rule="CallSuperInConstructor" ruleset="Code Style" package="main.java.mathNode" class="Add" method="Add" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="12" endline="23" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'calculate()' is missing an @Override annotation.
</violation>
<violation beginline="14" endline="14" begincolumn="7" endcolumn="48" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Add" method="calculate" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'leftNum' could be declared final
</violation>
<violation beginline="14" endline="14" begincolumn="24" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="15" endline="15" begincolumn="7" endcolumn="50" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Add" method="calculate" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'rightNum' could be declared final
</violation>
<violation beginline="15" endline="15" begincolumn="25" endcolumn="50" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="18" endline="19" begincolumn="7" endcolumn="57" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="19" endline="19" begincolumn="10" endcolumn="57" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="19" endline="19" begincolumn="17" endcolumn="34" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="19" endline="19" begincolumn="38" endcolumn="56" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="19" endline="19" begincolumn="10" endcolumn="57" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="22" endline="22" begincolumn="14" endcolumn="34" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="22" endline="22" begincolumn="38" endcolumn="59" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="25" endline="33" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="27" endline="27" begincolumn="7" endcolumn="79" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Add" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'str' could be declared final
</violation>
<violation beginline="27" endline="27" begincolumn="20" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="27" endline="27" begincolumn="55" endcolumn="79" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="32" endline="32" begincolumn="10" endcolumn="20" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="32" endline="32" begincolumn="10" endcolumn="20" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Add" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="36" endline="42" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Add" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="38" endline="38" begincolumn="7" endcolumn="37" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Add" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'clone' could be declared final
</violation>
<violation beginline="39" endline="39" begincolumn="7" endcolumn="64" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="40" endline="40" begincolumn="7" endcolumn="66" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Add" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Dec.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Dec" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="34" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="main.java.mathNode" class="Dec" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Dec
</violation>
<violation beginline="10" endline="10" begincolumn="19" endcolumn="23" rule="ImmutableField" ruleset="Design" package="main.java.mathNode" class="Dec" variable="value" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'value' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="12" endline="12" begincolumn="11" endcolumn="51" rule="CallSuperInConstructor" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="Dec" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="12" endline="12" begincolumn="15" endcolumn="26" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="Dec" variable="value" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'value' is not assigned and could be declared final
</violation>
<violation beginline="14" endline="14" begincolumn="11" endcolumn="46" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Dec" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'calculate()' is missing an @Override annotation.
</violation>
<violation beginline="16" endline="24" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Dec" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="18" endline="18" begincolumn="7" endcolumn="41" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'str' could be declared final
</violation>
<violation beginline="21" endline="21" begincolumn="10" endcolumn="32" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="21" endline="21" begincolumn="10" endcolumn="32" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="21" endline="21" begincolumn="10" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="23" endline="23" begincolumn="10" endcolumn="20" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="23" endline="23" begincolumn="10" endcolumn="20" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Dec" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="27" endline="30" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Dec" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Div.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Div" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="35" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="main.java.mathNode" class="Div" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Div
</violation>
<violation beginline="10" endline="10" begincolumn="11" endcolumn="35" rule="CallSuperInConstructor" ruleset="Code Style" package="main.java.mathNode" class="Div" method="Div" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="12" endline="15" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Div" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'calculate()' is missing an @Override annotation.
</violation>
<violation beginline="14" endline="14" begincolumn="14" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="14" endline="14" begincolumn="14" endcolumn="52" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="14" endline="14" begincolumn="56" endcolumn="95" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="14" endline="14" begincolumn="56" endcolumn="95" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="17" endline="25" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="19" endline="19" begincolumn="7" endcolumn="79" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Div" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'str' could be declared final
</violation>
<violation beginline="19" endline="19" begincolumn="20" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="19" endline="19" begincolumn="55" endcolumn="79" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="22" endline="22" begincolumn="10" endcolumn="32" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="22" endline="22" begincolumn="10" endcolumn="32" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="22" endline="22" begincolumn="10" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="24" endline="24" begincolumn="10" endcolumn="20" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="24" endline="24" begincolumn="10" endcolumn="20" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Div" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="28" endline="34" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Div" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="30" endline="30" begincolumn="7" endcolumn="37" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Div" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'clone' could be declared final
</violation>
<violation beginline="31" endline="31" begincolumn="7" endcolumn="64" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="32" endline="32" begincolumn="7" endcolumn="66" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Div" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Expression.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Expression" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="31" begincolumn="17" endcolumn="1" rule="AbstractNaming" ruleset="Code Style" package="main.java.mathNode" class="Expression" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#abstractnaming" priority="3">
Abstract classes should be named AbstractXXX
</violation>
<violation beginline="8" endline="31" begincolumn="17" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="main.java.mathNode" class="Expression" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="10" endline="10" begincolumn="22" endcolumn="40" rule="RedundantFieldInitializer" ruleset="Performance" package="main.java.mathNode" class="Expression" variable="parenthesis" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#redundantfieldinitializer" priority="3">
Avoid using redundant field initializer for 'parenthesis'
</violation>
<violation beginline="12" endline="12" begincolumn="26" endcolumn="37" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Expression" method="setParens" variable="bool" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'bool' is not assigned and could be declared final
</violation>
<violation beginline="20" endline="20" begincolumn="20" endcolumn="37" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Expression" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="21" endline="24" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Expression" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'clone()' is missing an @Override annotation.
</violation>
<violation beginline="21" endline="24" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Expression" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Factory.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Factory" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="71" begincolumn="8" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="main.java.mathNode" class="Factory" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="15" endline="15" begincolumn="32" endcolumn="43" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="token" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'token' is not assigned and could be declared final
</violation>
<violation beginline="17" endline="17" begincolumn="28" endcolumn="28" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="19" endline="19" begincolumn="10" endcolumn="56" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'newNode' could be declared final
</violation>
<violation beginline="20" endline="20" begincolumn="32" endcolumn="46" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="24" endline="24" begincolumn="10" endcolumn="45" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'numInt' could be declared final
</violation>
<violation beginline="25" endline="25" begincolumn="10" endcolumn="34" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="28" endline="28" begincolumn="13" endcolumn="53" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'numDub' could be declared final
</violation>
<violation beginline="29" endline="29" begincolumn="13" endcolumn="37" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="41" endline="41" begincolumn="37" endcolumn="38" rule="ShortVariable" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="ch" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like ch
</violation>
<violation beginline="41" endline="41" begincolumn="32" endcolumn="38" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="ch" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'ch' is not assigned and could be declared final
</violation>
<violation beginline="45" endline="45" begincolumn="20" endcolumn="36" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="46" endline="46" begincolumn="20" endcolumn="36" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="47" endline="47" begincolumn="20" endcolumn="37" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="48" endline="48" begincolumn="20" endcolumn="36" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="49" endline="49" begincolumn="20" endcolumn="36" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="59" endline="59" begincolumn="32" endcolumn="38" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="num" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'num' is not assigned and could be declared final
</violation>
<violation beginline="66" endline="66" begincolumn="32" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Factory" method="buildNode" variable="num" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'num' is not assigned and could be declared final
</violation>
<violation beginline="67" endline="70" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Factory" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'clone()' is missing an @Override annotation.
</violation>
<violation beginline="67" endline="70" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Factory" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Int.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Int" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="35" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="main.java.mathNode" class="Int" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Int
</violation>
<violation beginline="10" endline="10" begincolumn="16" endcolumn="20" rule="ImmutableField" ruleset="Design" package="main.java.mathNode" class="Int" variable="value" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'value' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="12" endline="12" begincolumn="11" endcolumn="48" rule="CallSuperInConstructor" ruleset="Code Style" package="main.java.mathNode" class="Int" method="Int" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="12" endline="12" begincolumn="15" endcolumn="23" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Int" method="Int" variable="value" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'value' is not assigned and could be declared final
</violation>
<violation beginline="14" endline="14" begincolumn="11" endcolumn="46" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Int" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'calculate()' is missing an @Override annotation.
</violation>
<violation beginline="16" endline="24" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Int" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="18" endline="18" begincolumn="7" endcolumn="42" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Int" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'str' could be declared final
</violation>
<violation beginline="21" endline="21" begincolumn="10" endcolumn="32" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Int" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="21" endline="21" begincolumn="10" endcolumn="32" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Int" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="21" endline="21" begincolumn="10" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Int" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="23" endline="23" begincolumn="10" endcolumn="20" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Int" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="23" endline="23" begincolumn="10" endcolumn="20" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Int" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="27" endline="30" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Int" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Mult.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Mult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="43" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="main.java.mathNode" class="Mult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Mult
</violation>
<violation beginline="10" endline="10" begincolumn="11" endcolumn="36" rule="CallSuperInConstructor" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="Mult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="12" endline="23" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'calculate()' is missing an @Override annotation.
</violation>
<violation beginline="14" endline="14" begincolumn="7" endcolumn="48" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="calculate" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'leftNum' could be declared final
</violation>
<violation beginline="14" endline="14" begincolumn="24" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="15" endline="15" begincolumn="7" endcolumn="50" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="calculate" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'rightNum' could be declared final
</violation>
<violation beginline="15" endline="15" begincolumn="25" endcolumn="50" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="18" endline="19" begincolumn="7" endcolumn="57" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="19" endline="19" begincolumn="10" endcolumn="57" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="19" endline="19" begincolumn="17" endcolumn="34" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="19" endline="19" begincolumn="38" endcolumn="56" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="19" endline="19" begincolumn="10" endcolumn="57" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="22" endline="22" begincolumn="14" endcolumn="34" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="22" endline="22" begincolumn="38" endcolumn="59" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="25" endline="33" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="27" endline="27" begincolumn="7" endcolumn="79" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'str' could be declared final
</violation>
<violation beginline="27" endline="27" begincolumn="20" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="27" endline="27" begincolumn="55" endcolumn="79" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="32" endline="32" begincolumn="10" endcolumn="20" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="32" endline="32" begincolumn="10" endcolumn="20" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="36" endline="42" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Mult" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="38" endline="38" begincolumn="7" endcolumn="39" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Mult" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'clone' could be declared final
</violation>
<violation beginline="39" endline="39" begincolumn="7" endcolumn="64" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="40" endline="40" begincolumn="7" endcolumn="66" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Mult" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Operator.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Operator" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="37" begincolumn="17" endcolumn="1" rule="AbstractNaming" ruleset="Code Style" package="main.java.mathNode" class="Operator" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#abstractnaming" priority="3">
Abstract classes should be named AbstractXXX
</violation>
<violation beginline="8" endline="37" begincolumn="17" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="main.java.mathNode" class="Operator" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="8" endline="37" begincolumn="17" endcolumn="1" rule="DataClass" ruleset="Design" package="main.java.mathNode" class="Operator" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#dataclass" priority="3">
The class 'Operator' is suspected to be a Data Class (WOC=28.571%, NOPA=0, NOAM=5, WMC=10)
</violation>
<violation beginline="10" endline="10" begincolumn="23" endcolumn="37" rule="RedundantFieldInitializer" ruleset="Performance" package="main.java.mathNode" class="Operator" variable="leftNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#redundantfieldinitializer" priority="3">
Avoid using redundant field initializer for 'leftNode'
</violation>
<violation beginline="11" endline="11" begincolumn="23" endcolumn="38" rule="RedundantFieldInitializer" ruleset="Performance" package="main.java.mathNode" class="Operator" variable="rightNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#redundantfieldinitializer" priority="3">
Avoid using redundant field initializer for 'rightNode'
</violation>
<violation beginline="19" endline="19" begincolumn="28" endcolumn="45" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="setLeftNode" variable="newNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'newNode' is not assigned and could be declared final
</violation>
<violation beginline="20" endline="20" begincolumn="29" endcolumn="46" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="setRightNode" variable="newNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'newNode' is not assigned and could be declared final
</violation>
<violation beginline="22" endline="22" begincolumn="26" endcolumn="37" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="setParens" variable="bool" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'bool' is not assigned and could be declared final
</violation>
<violation beginline="22" endline="28" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Operator" method="setParens" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'setParens(boolean)' is missing an @Override annotation.
</violation>
<violation beginline="26" endline="27" begincolumn="7" endcolumn="24" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="setParens" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="27" endline="27" begincolumn="10" endcolumn="24" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="setParens" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="30" endline="36" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Operator" method="checkTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'checkTree()' is missing an @Override annotation.
</violation>
<violation beginline="33" endline="33" begincolumn="10" endcolumn="22" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="checkTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="33" endline="33" begincolumn="10" endcolumn="22" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="checkTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="33" endline="33" begincolumn="10" endcolumn="22" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="checkTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="35" endline="35" begincolumn="10" endcolumn="62" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="checkTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="35" endline="35" begincolumn="10" endcolumn="62" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Operator" method="checkTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Pow.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Pow" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="35" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="main.java.mathNode" class="Pow" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Pow
</violation>
<violation beginline="10" endline="10" begincolumn="11" endcolumn="35" rule="CallSuperInConstructor" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="Pow" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="12" endline="15" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Pow" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'calculate()' is missing an @Override annotation.
</violation>
<violation beginline="14" endline="14" begincolumn="23" endcolumn="61" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="14" endline="14" begincolumn="23" endcolumn="61" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="14" endline="14" begincolumn="64" endcolumn="103" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="14" endline="14" begincolumn="64" endcolumn="103" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="17" endline="25" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="19" endline="19" begincolumn="7" endcolumn="79" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'str' could be declared final
</violation>
<violation beginline="19" endline="19" begincolumn="20" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="19" endline="19" begincolumn="55" endcolumn="79" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="22" endline="22" begincolumn="10" endcolumn="32" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="22" endline="22" begincolumn="10" endcolumn="32" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="22" endline="22" begincolumn="10" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="24" endline="24" begincolumn="10" endcolumn="20" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="24" endline="24" begincolumn="10" endcolumn="20" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="28" endline="34" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Pow" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="30" endline="30" begincolumn="7" endcolumn="37" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Pow" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'clone' could be declared final
</violation>
<violation beginline="31" endline="31" begincolumn="7" endcolumn="64" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="32" endline="32" begincolumn="7" endcolumn="66" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Pow" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathNode\Sub.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathNode" class="Sub" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="8" endline="43" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="main.java.mathNode" class="Sub" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Sub
</violation>
<violation beginline="10" endline="10" begincolumn="11" endcolumn="35" rule="CallSuperInConstructor" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="Sub" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="12" endline="23" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'calculate()' is missing an @Override annotation.
</violation>
<violation beginline="14" endline="14" begincolumn="7" endcolumn="48" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="calculate" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'leftNum' could be declared final
</violation>
<violation beginline="14" endline="14" begincolumn="24" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="15" endline="15" begincolumn="7" endcolumn="50" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="calculate" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'rightNum' could be declared final
</violation>
<violation beginline="15" endline="15" begincolumn="25" endcolumn="50" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="18" endline="19" begincolumn="7" endcolumn="57" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="19" endline="19" begincolumn="10" endcolumn="57" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="19" endline="19" begincolumn="17" endcolumn="34" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="19" endline="19" begincolumn="38" endcolumn="56" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="19" endline="19" begincolumn="10" endcolumn="57" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="22" endline="22" begincolumn="14" endcolumn="34" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="22" endline="22" begincolumn="38" endcolumn="59" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="calculate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="25" endline="33" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="27" endline="27" begincolumn="7" endcolumn="79" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="toString" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'str' could be declared final
</violation>
<violation beginline="27" endline="27" begincolumn="20" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="27" endline="27" begincolumn="55" endcolumn="79" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="30" endline="30" begincolumn="10" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="32" endline="32" begincolumn="10" endcolumn="20" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="32" endline="32" begincolumn="10" endcolumn="20" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="36" endline="42" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathNode" class="Sub" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="38" endline="38" begincolumn="7" endcolumn="37" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathNode" class="Sub" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'clone' could be declared final
</violation>
<violation beginline="39" endline="39" begincolumn="7" endcolumn="64" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="40" endline="40" begincolumn="7" endcolumn="66" rule="LawOfDemeter" ruleset="Design" package="main.java.mathNode" class="Sub" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathTree\CalcApp.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="11" endline="42" begincolumn="1" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="main.java.mathTree" class="CalcApp" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="12" endline="12" begincolumn="11" endcolumn="45" rule="MutableStaticState" ruleset="Design" package="main.java.mathTree" class="CalcApp" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#mutablestaticstate" priority="3">
Do not use non-final non-private static fields
</violation>
<violation beginline="12" endline="12" begincolumn="11" endcolumn="45" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the calcTree field if you want a default access modifier
</violation>
<violation beginline="12" endline="12" begincolumn="4" endcolumn="45" rule="DefaultPackage" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="14" endline="14" begincolumn="28" endcolumn="40" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="19" endline="19" begincolumn="24" endcolumn="24" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="main.java.mathTree" class="CalcApp" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="21" endline="21" begincolumn="18" endcolumn="19" rule="ShortVariable" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" method="main" variable="in" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like in
</violation>
<violation beginline="21" endline="21" begincolumn="18" endcolumn="19" rule="CloseResource" ruleset="Error Prone" package="main.java.mathTree" class="CalcApp" method="main" variable="in" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this InputStream object are closed after use
</violation>
<violation beginline="21" endline="21" begincolumn="10" endcolumn="44" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'in' could be declared final
</violation>
<violation beginline="24" endline="25" begincolumn="10" endcolumn="37" rule="WhileLoopsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#whileloopsmustusebraces" priority="3">
Avoid using while statements without curly braces
</violation>
<violation beginline="24" endline="24" begincolumn="16" endcolumn="33" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="CalcApp" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="24" endline="25" begincolumn="10" endcolumn="37" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="38" endline="39" begincolumn="7" endcolumn="46" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="39" endline="39" begincolumn="10" endcolumn="27" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="CalcApp" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="39" endline="39" begincolumn="10" endcolumn="46" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="CalcApp" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathTree\MathTree.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathTree" class="MathTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="9" endline="344" begincolumn="8" endcolumn="1" rule="ModifiedCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#modifiedcyclomaticcomplexity" priority="3">
The class 'MathTree' has a Modified Cyclomatic Complexity of 5 (Highest = 11).
</violation>
<violation beginline="9" endline="344" begincolumn="8" endcolumn="1" rule="StdCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#stdcyclomaticcomplexity" priority="3">
The class 'MathTree' has a Standard Cyclomatic Complexity of 5 (Highest = 11).
</violation>
<violation beginline="11" endline="11" begincolumn="42" endcolumn="56" rule="RedundantFieldInitializer" ruleset="Performance" package="main.java.mathTree" class="MathTree" variable="rootNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#redundantfieldinitializer" priority="3">
Avoid using redundant field initializer for 'rootNode'
</violation>
<violation beginline="12" endline="12" begincolumn="26" endcolumn="35" rule="ImmutableField" ruleset="Design" package="main.java.mathTree" class="MathTree" variable="strScanner" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'strScanner' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="22" endline="22" begincolumn="7" endcolumn="58" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="MathTree" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'specialChars' could be declared final
</violation>
<violation beginline="31" endline="31" begincolumn="24" endcolumn="43" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="init" variable="mathStatement" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'mathStatement' is not assigned and could be declared final
</violation>
<violation beginline="33" endline="33" begincolumn="7" endcolumn="65" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="init" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'strList' could be declared final
</violation>
<violation beginline="40" endline="40" begincolumn="13" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="40" endline="40" begincolumn="13" endcolumn="24" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="40" endline="40" begincolumn="13" endcolumn="24" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="42" endline="42" begincolumn="13" endcolumn="62" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="42" endline="42" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="42" endline="42" begincolumn="13" endcolumn="62" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="45" endline="45" begincolumn="18" endcolumn="21" rule="NullAssignment" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="init" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="56" endline="56" begincolumn="30" endcolumn="47" rule="LooseCoupling" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedList'; use the interface instead
</violation>
<violation beginline="56" endline="56" begincolumn="30" endcolumn="55" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="strList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'strList' is not assigned and could be declared final
</violation>
<violation beginline="56" endline="128" begincolumn="12" endcolumn="4" rule="ModifiedCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#modifiedcyclomaticcomplexity" priority="3">
The method 'cleanStrList' has a Modified Cyclomatic Complexity of 10.
</violation>
<violation beginline="56" endline="128" begincolumn="12" endcolumn="4" rule="StdCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#stdcyclomaticcomplexity" priority="3">
The method 'cleanStrList' has a Standard Cyclomatic Complexity of 10.
</violation>
<violation beginline="56" endline="128" begincolumn="12" endcolumn="4" rule="CognitiveComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'cleanStrList(LinkedList)' has a cognitive complexity of 29, current threshold is 15
</violation>
<violation beginline="56" endline="128" begincolumn="12" endcolumn="4" rule="CyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'cleanStrList(LinkedList)' has a cyclomatic complexity of 18.
</violation>
<violation beginline="59" endline="59" begincolumn="7" endcolumn="52" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'negScanner' could be declared final
</violation>
<violation beginline="63" endline="128" begincolumn="14" endcolumn="28" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="opStr" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DU'-anomaly for variable 'opStr' (lines '63'-'128').
</violation>
<violation beginline="63" endline="63" begincolumn="7" endcolumn="28" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'opStr' could be declared final
</violation>
<violation beginline="66" endline="75" begincolumn="13" endcolumn="46" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="newList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'newList' (lines '66'-'75').
</violation>
<violation beginline="66" endline="128" begincolumn="26" endcolumn="51" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="newList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DU'-anomaly for variable 'newList' (lines '66'-'128').
</violation>
<violation beginline="66" endline="66" begincolumn="36" endcolumn="51" rule="UnusedAssignment" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The initializer for variable 'newList' is never used (overwritten on line 75)
</violation>
<violation beginline="78" endline="78" begincolumn="16" endcolumn="41" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="78" endline="78" begincolumn="47" endcolumn="72" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="78" endline="78" begincolumn="16" endcolumn="41" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="78" endline="78" begincolumn="47" endcolumn="72" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="81" endline="81" begincolumn="16" endcolumn="58" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'newStr' could be declared final
</violation>
<violation beginline="88" endline="88" begincolumn="19" endcolumn="48" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="88" endline="88" begincolumn="53" endcolumn="82" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="88" endline="88" begincolumn="19" endcolumn="48" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="88" endline="88" begincolumn="53" endcolumn="82" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="89" endline="89" begincolumn="26" endcolumn="51" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="89" endline="89" begincolumn="26" endcolumn="51" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="92" endline="92" begincolumn="19" endcolumn="61" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'newStr' could be declared final
</violation>
<violation beginline="94" endline="94" begincolumn="19" endcolumn="19" rule="AvoidReassigningLoopVariables" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#avoidreassigningloopvariables" priority="3">
Avoid reassigning the loop control variable 'k'
</violation>
<violation beginline="94" endline="86" begincolumn="48" endcolumn="50" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="k" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'k' (lines '94'-'86').
</violation>
<violation beginline="102" endline="102" begincolumn="13" endcolumn="13" rule="AvoidReassigningLoopVariables" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#avoidreassigningloopvariables" priority="3">
Avoid reassigning the loop control variable 'i'
</violation>
<violation beginline="105" endline="105" begincolumn="18" endcolumn="36" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="105" endline="105" begincolumn="18" endcolumn="36" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="107" endline="107" begincolumn="13" endcolumn="47" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'prevStr' could be declared final
</violation>
<violation beginline="109" endline="109" begincolumn="44" endcolumn="57" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="109" endline="109" begincolumn="44" endcolumn="57" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="112" endline="112" begincolumn="16" endcolumn="16" rule="AvoidReassigningLoopVariables" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#avoidreassigningloopvariables" priority="3">
Avoid reassigning the loop control variable 'i'
</violation>
<violation beginline="112" endline="68" begincolumn="42" endcolumn="44" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="i" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'i' (lines '112'-'68').
</violation>
<violation beginline="116" endline="116" begincolumn="18" endcolumn="36" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="116" endline="116" begincolumn="18" endcolumn="36" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="118" endline="118" begincolumn="13" endcolumn="47" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'nextStr' could be declared final
</violation>
<violation beginline="120" endline="120" begincolumn="44" endcolumn="57" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="120" endline="120" begincolumn="44" endcolumn="57" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="123" endline="123" begincolumn="16" endcolumn="16" rule="AvoidReassigningLoopVariables" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="cleanStrList" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#avoidreassigningloopvariables" priority="3">
Avoid reassigning the loop control variable 'i'
</violation>
<violation beginline="123" endline="68" begincolumn="42" endcolumn="44" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="cleanStrList" variable="i" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'i' (lines '123'-'68').
</violation>
<violation beginline="136" endline="136" begincolumn="30" endcolumn="47" rule="LooseCoupling" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedList'; use the interface instead
</violation>
<violation beginline="136" endline="136" begincolumn="30" endcolumn="57" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" variable="strTokens" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'strTokens' is not assigned and could be declared final
</violation>
<violation beginline="140" endline="143" begincolumn="7" endcolumn="21" rule="SimplifyBooleanReturns" ruleset="Design" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#simplifybooleanreturns" priority="3">
Avoid unnecessary if..then..else statements when returning booleans
</violation>
<violation beginline="141" endline="141" begincolumn="10" endcolumn="22" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="141" endline="141" begincolumn="10" endcolumn="22" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="141" endline="141" begincolumn="10" endcolumn="22" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="143" endline="143" begincolumn="10" endcolumn="21" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="143" endline="143" begincolumn="10" endcolumn="21" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="152" endline="152" begincolumn="52" endcolumn="69" rule="LooseCoupling" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedList'; use the interface instead
</violation>
<violation beginline="152" endline="152" begincolumn="82" endcolumn="97" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" variable="isParens" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'isParens' is not assigned and could be declared final
</violation>
<violation beginline="152" endline="152" begincolumn="52" endcolumn="79" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" variable="strTokens" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'strTokens' is not assigned and could be declared final
</violation>
<violation beginline="152" endline="220" begincolumn="12" endcolumn="4" rule="ModifiedCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#modifiedcyclomaticcomplexity" priority="3">
The method 'buildTree' has a Modified Cyclomatic Complexity of 11.
</violation>
<violation beginline="152" endline="220" begincolumn="12" endcolumn="4" rule="StdCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#stdcyclomaticcomplexity" priority="3">
The method 'buildTree' has a Standard Cyclomatic Complexity of 11.
</violation>
<violation beginline="152" endline="220" begincolumn="12" endcolumn="4" rule="CognitiveComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'buildTree(LinkedList, boolean)' has a cognitive complexity of 26, current threshold is 15
</violation>
<violation beginline="152" endline="220" begincolumn="12" endcolumn="4" rule="CyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'buildTree(LinkedList, boolean)' has a cyclomatic complexity of 12.
</violation>
<violation beginline="152" endline="220" begincolumn="12" endcolumn="4" rule="NPathComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#npathcomplexity" priority="3">
The method 'buildTree(LinkedList, boolean)' has an NPath complexity of 202, current threshold is 200
</violation>
<violation beginline="155" endline="220" begincolumn="37" endcolumn="51" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="buildTree" variable="rootNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DU'-anomaly for variable 'rootNode' (lines '155'-'220').
</violation>
<violation beginline="157" endline="186" begincolumn="13" endcolumn="48" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="buildTree" variable="newNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'newNode' (lines '157'-'186').
</violation>
<violation beginline="157" endline="199" begincolumn="10" endcolumn="47" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="buildTree" variable="newNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'newNode' (lines '157'-'199').
</violation>
<violation beginline="157" endline="220" begincolumn="37" endcolumn="50" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="buildTree" variable="newNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DU'-anomaly for variable 'newNode' (lines '157'-'220').
</violation>
<violation beginline="157" endline="157" begincolumn="47" endcolumn="50" rule="UnusedAssignment" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The initializer for variable 'newNode' is never used (overwritten on lines 186 and 199)
</violation>
<violation beginline="159" endline="159" begincolumn="36" endcolumn="40" rule="SimplifyBooleanExpressions" ruleset="Design" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="164" endline="164" begincolumn="13" endcolumn="29" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="164" endline="164" begincolumn="13" endcolumn="29" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="168" endline="168" begincolumn="16" endcolumn="33" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="169" endline="169" begincolumn="16" endcolumn="27" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="171" endline="180" begincolumn="18" endcolumn="13" rule="ConfusingTernary" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#confusingternary" priority="3">
Avoid if (x != y) ..; else ..;
</violation>
<violation beginline="173" endline="173" begincolumn="16" endcolumn="33" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="174" endline="174" begincolumn="16" endcolumn="27" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="179" endline="179" begincolumn="16" endcolumn="31" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="184" endline="184" begincolumn="13" endcolumn="29" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="184" endline="184" begincolumn="13" endcolumn="29" rule="PositionLiteralsFirstInComparisons" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#positionliteralsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="187" endline="188" begincolumn="13" endcolumn="27" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="188" endline="188" begincolumn="16" endcolumn="27" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="188" endline="188" begincolumn="16" endcolumn="27" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="193" endline="193" begincolumn="16" endcolumn="27" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="193" endline="193" begincolumn="16" endcolumn="27" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="193" endline="193" begincolumn="16" endcolumn="27" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="195" endline="195" begincolumn="16" endcolumn="24" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="195" endline="195" begincolumn="16" endcolumn="24" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="202" endline="202" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="203" endline="203" begincolumn="13" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="206" endline="206" begincolumn="13" endcolumn="53" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="206" endline="206" begincolumn="13" endcolumn="53" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="208" endline="209" begincolumn="10" endcolumn="24" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="209" endline="209" begincolumn="13" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="209" endline="209" begincolumn="13" endcolumn="24" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="215" endline="215" begincolumn="10" endcolumn="27" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="216" endline="216" begincolumn="10" endcolumn="21" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="219" endline="219" begincolumn="10" endcolumn="25" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="219" endline="219" begincolumn="10" endcolumn="25" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="buildTree" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="228" endline="228" begincolumn="53" endcolumn="90" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" variable="rootNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'rootNode' is not assigned and could be declared final
</violation>
<violation beginline="228" endline="310" begincolumn="12" endcolumn="4" rule="ModifiedCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#modifiedcyclomaticcomplexity" priority="3">
The method 'insertNode' has a Modified Cyclomatic Complexity of 11.
</violation>
<violation beginline="228" endline="310" begincolumn="12" endcolumn="4" rule="StdCyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#stdcyclomaticcomplexity" priority="3">
The method 'insertNode' has a Standard Cyclomatic Complexity of 11.
</violation>
<violation beginline="228" endline="310" begincolumn="12" endcolumn="4" rule="CognitiveComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'insertNode(main.java.mathNode.Expression, main.java.mathNode.Expression)' has a cognitive complexity of 35, current threshold is 15
</violation>
<violation beginline="228" endline="310" begincolumn="12" endcolumn="4" rule="CyclomaticComplexity" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'insertNode(main.java.mathNode.Expression, main.java.mathNode.Expression)' has a cyclomatic complexity of 14.
</violation>
<violation beginline="229" endline="229" begincolumn="10" endcolumn="46" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" variable="newNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'newNode' is not assigned and could be declared final
</violation>
<violation beginline="233" endline="233" begincolumn="10" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="233" endline="233" begincolumn="10" endcolumn="24" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="233" endline="233" begincolumn="10" endcolumn="24" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="236" endline="236" begincolumn="10" endcolumn="25" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="236" endline="236" begincolumn="10" endcolumn="25" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="236" endline="236" begincolumn="10" endcolumn="25" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="240" endline="240" begincolumn="10" endcolumn="88" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'newOperator' could be declared final
</violation>
<violation beginline="245" endline="245" begincolumn="13" endcolumn="60" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="245" endline="245" begincolumn="13" endcolumn="60" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="248" endline="248" begincolumn="13" endcolumn="45" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="249" endline="249" begincolumn="13" endcolumn="31" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="253" endline="253" begincolumn="13" endcolumn="34" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="253" endline="253" begincolumn="39" endcolumn="65" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="255" endline="255" begincolumn="13" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="256" endline="256" begincolumn="13" endcolumn="31" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="258" endline="258" begincolumn="16" endcolumn="37" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="258" endline="258" begincolumn="41" endcolumn="67" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="259" endline="259" begincolumn="19" endcolumn="39" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="260" endline="260" begincolumn="19" endcolumn="39" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="262" endline="262" begincolumn="52" endcolumn="72" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="266" endline="266" begincolumn="13" endcolumn="33" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="268" endline="268" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="269" endline="269" begincolumn="13" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="273" endline="273" begincolumn="13" endcolumn="58" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="273" endline="273" begincolumn="37" endcolumn="57" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="274" endline="274" begincolumn="13" endcolumn="44" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="275" endline="275" begincolumn="13" endcolumn="28" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="287" endline="287" begincolumn="13" endcolumn="60" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="287" endline="287" begincolumn="13" endcolumn="60" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="290" endline="290" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="292" endline="292" begincolumn="13" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="295" endline="295" begincolumn="16" endcolumn="36" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="297" endline="297" begincolumn="16" endcolumn="36" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="298" endline="298" begincolumn="16" endcolumn="76" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="298" endline="298" begincolumn="55" endcolumn="75" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="298" endline="298" begincolumn="16" endcolumn="76" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="301" endline="301" begincolumn="16" endcolumn="33" rule="SystemPrintln" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="302" endline="302" begincolumn="22" endcolumn="42" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="303" endline="303" begincolumn="16" endcolumn="27" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="307" endline="307" begincolumn="10" endcolumn="37" rule="LawOfDemeter" ruleset="Design" package="main.java.mathTree" class="MathTree" method="insertNode" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="319" endline="319" begincolumn="10" endcolumn="21" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="solve" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="319" endline="319" begincolumn="10" endcolumn="21" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="solve" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="319" endline="319" begincolumn="10" endcolumn="21" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="solve" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="321" endline="321" begincolumn="10" endcolumn="37" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="solve" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="321" endline="321" begincolumn="10" endcolumn="37" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="solve" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="328" endline="334" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'toString()' is missing an @Override annotation.
</violation>
<violation beginline="331" endline="331" begincolumn="10" endcolumn="19" rule="OnlyOneReturn" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="331" endline="331" begincolumn="10" endcolumn="19" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="331" endline="331" begincolumn="10" endcolumn="19" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="333" endline="333" begincolumn="10" endcolumn="36" rule="IfElseStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifelsestmtsmustusebraces" priority="3">
Avoid using if...else statements without curly braces
</violation>
<violation beginline="333" endline="333" begincolumn="10" endcolumn="36" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="toString" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="336" endline="343" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathTree" class="MathTree" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'clone()' is missing an @Override annotation.
</violation>
<violation beginline="336" endline="343" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathTree" class="MathTree" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="338" endline="338" begincolumn="7" endcolumn="47" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="MathTree" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'clone' could be declared final
</violation>
</file>
<file name="C:\simple-math-parser-master\src\main\java\mathTree\StringScanner.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="26" rule="PackageCase" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="10" endline="99" begincolumn="8" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="12" endline="12" begincolumn="12" endcolumn="29" rule="LooseCoupling" ruleset="Best Practices" package="main.java.mathTree" class="StringScanner" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedList'; use the interface instead
</violation>
<violation beginline="13" endline="13" begincolumn="12" endcolumn="29" rule="LooseCoupling" ruleset="Best Practices" package="main.java.mathTree" class="StringScanner" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'HashSet'; use the interface instead
</violation>
<violation beginline="14" endline="14" begincolumn="12" endcolumn="29" rule="LooseCoupling" ruleset="Best Practices" package="main.java.mathTree" class="StringScanner" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'HashSet'; use the interface instead
</violation>
<violation beginline="15" endline="15" begincolumn="20" endcolumn="41" rule="RedundantFieldInitializer" ruleset="Performance" package="main.java.mathTree" class="StringScanner" variable="skipWhitespace" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#redundantfieldinitializer" priority="3">
Avoid using redundant field initializer for 'skipWhitespace'
</violation>
<violation beginline="15" endline="15" begincolumn="12" endcolumn="42" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" package="main.java.mathTree" class="StringScanner" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field skipWhitespace has the same name as a method
</violation>
<violation beginline="22" endline="22" begincolumn="29" endcolumn="38" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addDelimiter" variable="delim" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'delim' is not assigned and could be declared final
</violation>
<violation beginline="23" endline="23" begincolumn="29" endcolumn="45" rule="UseVarargs" ruleset="Best Practices" package="main.java.mathTree" class="StringScanner" method="addDelimiter" variable="delimArray" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#usevarargs" priority="4">
Consider using varargs for methods or constructors which take an array the last parameter.
</violation>
<violation beginline="23" endline="23" begincolumn="29" endcolumn="45" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addDelimiter" variable="delimArray" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'delimArray' is not assigned and could be declared final
</violation>
<violation beginline="24" endline="25" begincolumn="7" endcolumn="26" rule="ForLoopsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addDelimiter" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#forloopsmustusebraces" priority="3">
Avoid using for statements without curly braces
</violation>
<violation beginline="24" endline="24" begincolumn="11" endcolumn="17" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addDelimiter" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'ch' could be declared final
</violation>
<violation beginline="24" endline="25" begincolumn="7" endcolumn="26" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addDelimiter" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="32" endline="32" begincolumn="31" endcolumn="46" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addSpecialChar" variable="specialChar" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'specialChar' is not assigned and could be declared final
</violation>
<violation beginline="37" endline="37" begincolumn="31" endcolumn="53" rule="UseVarargs" ruleset="Best Practices" package="main.java.mathTree" class="StringScanner" method="addSpecialChar" variable="specialCharArray" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#usevarargs" priority="4">
Consider using varargs for methods or constructors which take an array the last parameter.
</violation>
<violation beginline="37" endline="37" begincolumn="31" endcolumn="53" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addSpecialChar" variable="specialCharArray" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'specialCharArray' is not assigned and could be declared final
</violation>
<violation beginline="39" endline="40" begincolumn="7" endcolumn="29" rule="ForLoopsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addSpecialChar" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#forloopsmustusebraces" priority="3">
Avoid using for statements without curly braces
</violation>
<violation beginline="39" endline="39" begincolumn="11" endcolumn="17" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addSpecialChar" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'ch' could be declared final
</violation>
<violation beginline="39" endline="40" begincolumn="7" endcolumn="29" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="addSpecialChar" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="50" endline="50" begincolumn="11" endcolumn="28" rule="LooseCoupling" ruleset="Best Practices" package="main.java.mathTree" class="StringScanner" method="scan" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedList'; use the interface instead
</violation>
<violation beginline="50" endline="50" begincolumn="35" endcolumn="49" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="scan" variable="inputStr" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'inputStr' is not assigned and could be declared final
</violation>
<violation beginline="52" endline="52" begincolumn="12" endcolumn="13" rule="ShortVariable" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="scan" variable="ch" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like ch
</violation>
<violation beginline="65" endline="65" begincolumn="19" endcolumn="19" rule="UseStringBufferForStringAppends" ruleset="Performance" package="main.java.mathTree" class="StringScanner" method="scan" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_performance.html#usestringbufferforstringappends" priority="3">
Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
</violation>
<violation beginline="72" endline="72" begincolumn="7" endcolumn="50" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="scan" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'copyTokenList' could be declared final
</violation>
<violation beginline="78" endline="78" begincolumn="33" endcolumn="34" rule="ShortVariable" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="isDelim" variable="ch" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like ch
</violation>
<violation beginline="78" endline="78" begincolumn="28" endcolumn="34" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="isDelim" variable="ch" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'ch' is not assigned and could be declared final
</violation>
<violation beginline="80" endline="80" begincolumn="15" endcolumn="58" rule="UselessParentheses" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="isDelim" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="83" endline="83" begincolumn="27" endcolumn="38" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="saveToken" variable="token" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'token' is not assigned and could be declared final
</violation>
<violation beginline="85" endline="85" begincolumn="29" endcolumn="33" rule="SimplifyBooleanExpressions" ruleset="Design" package="main.java.mathTree" class="StringScanner" method="saveToken" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_design.html#simplifybooleanexpressions" priority="3">
Avoid unnecessary comparisons in boolean expressions
</violation>
<violation beginline="85" endline="86" begincolumn="7" endcolumn="30" rule="IfStmtsMustUseBraces" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="saveToken" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#ifstmtsmustusebraces" priority="3">
Avoid using if statements without curly braces
</violation>
<violation beginline="86" endline="86" begincolumn="10" endcolumn="30" rule="ControlStatementBraces" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="saveToken" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="89" endline="97" begincolumn="11" endcolumn="4" rule="MissingOverride" ruleset="Best Practices" package="main.java.mathTree" class="StringScanner" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'clone()' is missing an @Override annotation.
</violation>
<violation beginline="89" endline="97" begincolumn="11" endcolumn="4" rule="CloneMethodReturnTypeMustMatchClassName" ruleset="Error Prone" package="main.java.mathTree" class="StringScanner" method="clone" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#clonemethodreturntypemustmatchclassname" priority="3">
The return type of the clone() method must be the class name when implements Cloneable
</violation>
<violation beginline="91" endline="91" begincolumn="7" endcolumn="57" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="main.java.mathTree" class="StringScanner" method="clone" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'clone' could be declared final
</violation>
</file>
<configerror rule="LoosePackageCoupling" msg="No packages or classes specified"/>
</pmd>
